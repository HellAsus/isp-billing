extend type Query {
    tariff(id: ID @eq): Tariff @find
    tariffs: [Tariff!]! @all
}

extend type Mutation {
    createTariff(input: CreateTariffInput! @spread): Tariff @create
    updateTariff(input: UpdateTariffInput! @spread): Tariff @update
    deleteTariff(id: ID!): Tariff @delete
}

type Tariff {
    id: ID!
    name: String
    ammount: Float
    expired_lens: Int
    shaper_id: ID
    ip_pool_id: ID
    description: String
    is_default: Boolean
}


input CreateTariffInput {
    name: String!
    ammount: Float!
    expired_lens: Int!
    shaper_id: ID
    ip_pool_id: ID
    description: String
    is_default: Boolean
}

input UpdateTariffInput {
    id: ID!
    name: String
    ammount: Float
    expired_lens: Int
    shaper_id: ID
    ip_pool_id: ID
    description: String
    is_default: Boolean
}
